// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsManageModule.Data.EF;

namespace NewsManageModule.Data.Migrations
{
    [DbContext(typeof(NMMDbContext))]
    partial class NMMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewsManageModule.Data.Entities.History", b =>
                {
                    b.Property<int>("HID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EditTime");

                    b.Property<int>("ID");

                    b.Property<string>("NewContent")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<string>("NewHeader")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.Property<string>("OldContent")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<string>("OldHeader")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.HasKey("HID");

                    b.HasIndex("ID");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsUnicode(true);

                    b.Property<string>("Head")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<DateTime>("Time");

                    b.Property<int>("UID");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.HasIndex("UID");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.PostInTopic", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int>("TID");

                    b.HasKey("ID", "TID");

                    b.HasIndex("TID");

                    b.ToTable("PostsInTopics");
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.Resource", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.Property<long>("FileSize");

                    b.Property<int>("ID");

                    b.Property<DateTime>("ImportDate");

                    b.Property<bool>("IsAvatar");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("RID");

                    b.HasIndex("ID");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.Topic", b =>
                {
                    b.Property<int>("TID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("TID");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.User", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<DateTime>("RegistDate");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("UID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.History", b =>
                {
                    b.HasOne("NewsManageModule.Data.Entities.Post", "Post")
                        .WithMany("Histories")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.Post", b =>
                {
                    b.HasOne("NewsManageModule.Data.Entities.User", "Creator")
                        .WithMany("Posts")
                        .HasForeignKey("UID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.PostInTopic", b =>
                {
                    b.HasOne("NewsManageModule.Data.Entities.Post", "Post")
                        .WithMany("PostInTopics")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NewsManageModule.Data.Entities.Topic", "Topic")
                        .WithMany("PostsInTopic")
                        .HasForeignKey("TID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NewsManageModule.Data.Entities.Resource", b =>
                {
                    b.HasOne("NewsManageModule.Data.Entities.Post", "Post")
                        .WithMany("Resources")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
